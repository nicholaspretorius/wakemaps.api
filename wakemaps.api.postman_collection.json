{
	"info": {
		"_postman_id": "6a89aede-3296-4212-a414-a9e00051116d",
		"name": "WakeMaps API",
		"description": "WakeMaps API Spec\n\nContact Support:\n Email: todo@test.com",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "wakeparks",
			"item": [
				{
					"name": "{wakepark id}",
					"item": [
						{
							"name": "Get wakepark by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "37b0b5e1-50b5-421b-b1e5-4473bddddc58",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"response contains a wakepark\", function () {",
											"    var json = pm.response.json();",
											"    pm.expect(json.name).to.be.a('string')",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "api_key",
										"value": "",
										"description": "JWT Token (https://jwt.io/)"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/wakeparks/:wakepark_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"wakeparks",
										":wakepark_id"
									],
									"variable": [
										{
											"key": "wakepark_id",
											"value": "<long>",
											"description": "ID of wakepark to return"
										}
									]
								},
								"description": "Returns a single wakepark"
							},
							"response": [
								{
									"name": "resource not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "JWT Token (https://jwt.io/)",
													"type": "text/plain"
												},
												"key": "api_key",
												"value": ""
											}
										],
										"url": {
											"raw": "{{baseUrl}}/wakeparks/<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wakeparks",
												"<long>"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "JWT Token (https://jwt.io/)",
													"type": "text/plain"
												},
												"key": "api_key",
												"value": ""
											}
										],
										"url": {
											"raw": "{{baseUrl}}/wakeparks/<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wakeparks",
												"<long>"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"name\": \"<string>\",\n \"id\": \"<long>\",\n \"park_audience\": \"<string>\",\n \"park_open\": \"<boolean>\",\n \"park_published\": \"<boolean>\",\n \"logo_url\": \"<string>\",\n \"email1\": \"<string>\",\n \"email2\": \"<string>\",\n \"telephone1\": \"<string>\",\n \"telephone2\": \"<string>\",\n \"instagram_url\": \"<string>\",\n \"facebook_url\": \"<string>\",\n \"youtube_url\": \"<string>\",\n \"vimeo_url\": \"<string>\",\n \"twitter_url\": \"<string>\",\n \"website_url\": \"<string>\",\n \"summary\": \"<string>\",\n \"description\": \"<string>\",\n \"location\": {\n  \"id\": \"<long>\",\n  \"lat\": \"<long>\",\n  \"lng\": \"<long>\",\n  \"address1\": \"<string>\",\n  \"address2\": \"<string>\",\n  \"address3\": \"<string>\",\n  \"area_code\": \"<string>\",\n  \"city_town\": \"<string>\",\n  \"region\": \"<string>\",\n  \"time_zone\": \"<string>\",\n  \"country\": {\n   \"id\": \"<long>\",\n   \"country_name\": \"<string>\",\n   \"country_code\": \"<string>\",\n   \"country_flag\": \"<string>\",\n   \"country_flag_emoji\": \"<string>\",\n   \"currency\": {\n    \"id\": \"<long>\",\n    \"currency_name\": \"<string>\",\n    \"currency_code\": \"<string>\",\n    \"currency_symbol\": \"<string>\",\n    \"currency_short\": \"<string>\"\n   }\n  }\n },\n \"languages\": [\n  {\n   \"id\": \"<long>\",\n   \"language_name\": \"<string>\",\n   \"language_code\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"language_name\": \"<string>\",\n   \"language_code\": \"<string>\"\n  }\n ],\n \"cable_type\": {\n  \"id\": \"<long>\",\n  \"type\": \"<string>\",\n  \"direction\": \"<string>\"\n },\n \"images\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"videos\": [\n  \"<string>\",\n  \"<string>\"\n ]\n}"
								}
							]
						},
						{
							"name": "Deletes a wakepark",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4adc6a3c-0d88-448b-b440-04f1b1d34058",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"response contains a wakepark\", function () {",
											"    var json = pm.response.json();",
											"    pm.expect(json.name).to.be.a('string')",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "DELETE",
								"header": [
									{
										"key": "api_key",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/wakeparks/:wakepark_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"wakeparks",
										":wakepark_id"
									],
									"variable": [
										{
											"key": "wakepark_id",
											"value": "<long>",
											"description": "Wakepark id to delete"
										}
									]
								},
								"description": "Permanently deletes a wakepark listing"
							},
							"response": [
								{
									"name": "bad request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "api_key",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/wakeparks/<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wakeparks",
												"<long>"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "resource not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "api_key",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/wakeparks/<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wakeparks",
												"<long>"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "unauthorized",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "api_key",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/wakeparks/<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wakeparks",
												"<long>"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update an existing wakepark",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "aac56745-c6e6-4d97-bcc2-5131387e211f",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"response contains a wakepark\", function () {",
											"    var json = pm.response.json();",
											"    pm.expect(json.name).to.be.a('string')",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"id\": \"<long>\",\n    \"park_audience\": \"<string>\",\n    \"park_open\": \"<boolean>\",\n    \"park_published\": \"<boolean>\",\n    \"logo_url\": \"<string>\",\n    \"email1\": \"<string>\",\n    \"email2\": \"<string>\",\n    \"telephone1\": \"<string>\",\n    \"telephone2\": \"<string>\",\n    \"instagram_url\": \"<string>\",\n    \"facebook_url\": \"<string>\",\n    \"youtube_url\": \"<string>\",\n    \"vimeo_url\": \"<string>\",\n    \"twitter_url\": \"<string>\",\n    \"website_url\": \"<string>\",\n    \"summary\": \"<string>\",\n    \"description\": \"<string>\",\n    \"location\": {\n        \"id\": \"<long>\",\n        \"lat\": \"<long>\",\n        \"lng\": \"<long>\",\n        \"address1\": \"<string>\",\n        \"address2\": \"<string>\",\n        \"address3\": \"<string>\",\n        \"area_code\": \"<string>\",\n        \"city_town\": \"<string>\",\n        \"region\": \"<string>\",\n        \"time_zone\": \"<string>\",\n        \"country\": {\n            \"id\": \"<long>\",\n            \"country_name\": \"<string>\",\n            \"country_code\": \"<string>\",\n            \"country_flag\": \"<string>\",\n            \"country_flag_emoji\": \"<string>\",\n            \"currency\": {\n                \"id\": \"<long>\",\n                \"currency_name\": \"<string>\",\n                \"currency_code\": \"<string>\",\n                \"currency_symbol\": \"<string>\",\n                \"currency_short\": \"<string>\"\n            }\n        }\n    },\n    \"languages\": [\n        {\n            \"id\": \"<long>\",\n            \"language_name\": \"<string>\",\n            \"language_code\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"language_name\": \"<string>\",\n            \"language_code\": \"<string>\"\n        }\n    ],\n    \"cable_type\": {\n        \"id\": \"<long>\",\n        \"type\": \"<string>\",\n        \"direction\": \"<string>\"\n    },\n    \"images\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"videos\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/wakeparks/:wakepark_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"wakeparks",
										":wakepark_id"
									],
									"variable": [
										{
											"key": "wakepark_id",
											"value": "<long>",
											"description": "ID of wakepark to return"
										}
									]
								}
							},
							"response": [
								{
									"name": "bad request",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"id\": \"<long>\",\n    \"park_audience\": \"<string>\",\n    \"park_open\": \"<boolean>\",\n    \"park_published\": \"<boolean>\",\n    \"logo_url\": \"<string>\",\n    \"email1\": \"<string>\",\n    \"email2\": \"<string>\",\n    \"telephone1\": \"<string>\",\n    \"telephone2\": \"<string>\",\n    \"instagram_url\": \"<string>\",\n    \"facebook_url\": \"<string>\",\n    \"youtube_url\": \"<string>\",\n    \"vimeo_url\": \"<string>\",\n    \"twitter_url\": \"<string>\",\n    \"website_url\": \"<string>\",\n    \"summary\": \"<string>\",\n    \"description\": \"<string>\",\n    \"location\": {\n        \"id\": \"<long>\",\n        \"lat\": \"<long>\",\n        \"lng\": \"<long>\",\n        \"address1\": \"<string>\",\n        \"address2\": \"<string>\",\n        \"address3\": \"<string>\",\n        \"area_code\": \"<string>\",\n        \"city_town\": \"<string>\",\n        \"region\": \"<string>\",\n        \"time_zone\": \"<string>\",\n        \"country\": {\n            \"id\": \"<long>\",\n            \"country_name\": \"<string>\",\n            \"country_code\": \"<string>\",\n            \"country_flag\": \"<string>\",\n            \"country_flag_emoji\": \"<string>\",\n            \"currency\": {\n                \"id\": \"<long>\",\n                \"currency_name\": \"<string>\",\n                \"currency_code\": \"<string>\",\n                \"currency_symbol\": \"<string>\",\n                \"currency_short\": \"<string>\"\n            }\n        }\n    },\n    \"languages\": [\n        {\n            \"id\": \"<long>\",\n            \"language_name\": \"<string>\",\n            \"language_code\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"language_name\": \"<string>\",\n            \"language_code\": \"<string>\"\n        }\n    ],\n    \"cable_type\": {\n        \"id\": \"<long>\",\n        \"type\": \"<string>\",\n        \"direction\": \"<string>\"\n    },\n    \"images\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"videos\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/wakeparks/<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wakeparks",
												"<long>"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "resource not found",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"id\": \"<long>\",\n    \"park_audience\": \"<string>\",\n    \"park_open\": \"<boolean>\",\n    \"park_published\": \"<boolean>\",\n    \"logo_url\": \"<string>\",\n    \"email1\": \"<string>\",\n    \"email2\": \"<string>\",\n    \"telephone1\": \"<string>\",\n    \"telephone2\": \"<string>\",\n    \"instagram_url\": \"<string>\",\n    \"facebook_url\": \"<string>\",\n    \"youtube_url\": \"<string>\",\n    \"vimeo_url\": \"<string>\",\n    \"twitter_url\": \"<string>\",\n    \"website_url\": \"<string>\",\n    \"summary\": \"<string>\",\n    \"description\": \"<string>\",\n    \"location\": {\n        \"id\": \"<long>\",\n        \"lat\": \"<long>\",\n        \"lng\": \"<long>\",\n        \"address1\": \"<string>\",\n        \"address2\": \"<string>\",\n        \"address3\": \"<string>\",\n        \"area_code\": \"<string>\",\n        \"city_town\": \"<string>\",\n        \"region\": \"<string>\",\n        \"time_zone\": \"<string>\",\n        \"country\": {\n            \"id\": \"<long>\",\n            \"country_name\": \"<string>\",\n            \"country_code\": \"<string>\",\n            \"country_flag\": \"<string>\",\n            \"country_flag_emoji\": \"<string>\",\n            \"currency\": {\n                \"id\": \"<long>\",\n                \"currency_name\": \"<string>\",\n                \"currency_code\": \"<string>\",\n                \"currency_symbol\": \"<string>\",\n                \"currency_short\": \"<string>\"\n            }\n        }\n    },\n    \"languages\": [\n        {\n            \"id\": \"<long>\",\n            \"language_name\": \"<string>\",\n            \"language_code\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"language_name\": \"<string>\",\n            \"language_code\": \"<string>\"\n        }\n    ],\n    \"cable_type\": {\n        \"id\": \"<long>\",\n        \"type\": \"<string>\",\n        \"direction\": \"<string>\"\n    },\n    \"images\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"videos\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/wakeparks/<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wakeparks",
												"<long>"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "success",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"id\": \"<long>\",\n    \"park_audience\": \"<string>\",\n    \"park_open\": \"<boolean>\",\n    \"park_published\": \"<boolean>\",\n    \"logo_url\": \"<string>\",\n    \"email1\": \"<string>\",\n    \"email2\": \"<string>\",\n    \"telephone1\": \"<string>\",\n    \"telephone2\": \"<string>\",\n    \"instagram_url\": \"<string>\",\n    \"facebook_url\": \"<string>\",\n    \"youtube_url\": \"<string>\",\n    \"vimeo_url\": \"<string>\",\n    \"twitter_url\": \"<string>\",\n    \"website_url\": \"<string>\",\n    \"summary\": \"<string>\",\n    \"description\": \"<string>\",\n    \"location\": {\n        \"id\": \"<long>\",\n        \"lat\": \"<long>\",\n        \"lng\": \"<long>\",\n        \"address1\": \"<string>\",\n        \"address2\": \"<string>\",\n        \"address3\": \"<string>\",\n        \"area_code\": \"<string>\",\n        \"city_town\": \"<string>\",\n        \"region\": \"<string>\",\n        \"time_zone\": \"<string>\",\n        \"country\": {\n            \"id\": \"<long>\",\n            \"country_name\": \"<string>\",\n            \"country_code\": \"<string>\",\n            \"country_flag\": \"<string>\",\n            \"country_flag_emoji\": \"<string>\",\n            \"currency\": {\n                \"id\": \"<long>\",\n                \"currency_name\": \"<string>\",\n                \"currency_code\": \"<string>\",\n                \"currency_symbol\": \"<string>\",\n                \"currency_short\": \"<string>\"\n            }\n        }\n    },\n    \"languages\": [\n        {\n            \"id\": \"<long>\",\n            \"language_name\": \"<string>\",\n            \"language_code\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"language_name\": \"<string>\",\n            \"language_code\": \"<string>\"\n        }\n    ],\n    \"cable_type\": {\n        \"id\": \"<long>\",\n        \"type\": \"<string>\",\n        \"direction\": \"<string>\"\n    },\n    \"images\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"videos\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/wakeparks/<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wakeparks",
												"<long>"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"name\": \"<string>\",\n \"id\": \"<long>\",\n \"park_audience\": \"<string>\",\n \"park_open\": \"<boolean>\",\n \"park_published\": \"<boolean>\",\n \"logo_url\": \"<string>\",\n \"email1\": \"<string>\",\n \"email2\": \"<string>\",\n \"telephone1\": \"<string>\",\n \"telephone2\": \"<string>\",\n \"instagram_url\": \"<string>\",\n \"facebook_url\": \"<string>\",\n \"youtube_url\": \"<string>\",\n \"vimeo_url\": \"<string>\",\n \"twitter_url\": \"<string>\",\n \"website_url\": \"<string>\",\n \"summary\": \"<string>\",\n \"description\": \"<string>\",\n \"location\": {\n  \"id\": \"<long>\",\n  \"lat\": \"<long>\",\n  \"lng\": \"<long>\",\n  \"address1\": \"<string>\",\n  \"address2\": \"<string>\",\n  \"address3\": \"<string>\",\n  \"area_code\": \"<string>\",\n  \"city_town\": \"<string>\",\n  \"region\": \"<string>\",\n  \"time_zone\": \"<string>\",\n  \"country\": {\n   \"id\": \"<long>\",\n   \"country_name\": \"<string>\",\n   \"country_code\": \"<string>\",\n   \"country_flag\": \"<string>\",\n   \"country_flag_emoji\": \"<string>\",\n   \"currency\": {\n    \"id\": \"<long>\",\n    \"currency_name\": \"<string>\",\n    \"currency_code\": \"<string>\",\n    \"currency_symbol\": \"<string>\",\n    \"currency_short\": \"<string>\"\n   }\n  }\n },\n \"languages\": [\n  {\n   \"id\": \"<long>\",\n   \"language_name\": \"<string>\",\n   \"language_code\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"language_name\": \"<string>\",\n   \"language_code\": \"<string>\"\n  }\n ],\n \"cable_type\": {\n  \"id\": \"<long>\",\n  \"type\": \"<string>\",\n  \"direction\": \"<string>\"\n },\n \"images\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"videos\": [\n  \"<string>\",\n  \"<string>\"\n ]\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Get wakeparks",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d6fb43d-1d33-4d4a-a4e3-a3df15afa828",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"response has an 'items' array containing wakeparks\", function () {",
									"    var json = pm.response.json();",
									"    pm.expect(json.items).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/wakeparks?per_page=<string>&search=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"wakeparks"
							],
							"query": [
								{
									"key": "per_page",
									"value": "<string>",
									"description": "Number of items to be returned per page"
								},
								{
									"key": "search",
									"value": "<string>",
									"description": "Search term"
								}
							]
						},
						"description": "Returns a list of all wakeparks that can be paged or provided with a search term."
					},
					"response": [
						{
							"name": "success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/wakeparks?per_page=<string>&search=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"wakeparks"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<string>"
										},
										{
											"key": "search",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"name\": \"<string>\",\n  \"id\": \"<long>\",\n  \"park_audience\": \"<string>\",\n  \"park_open\": \"<boolean>\",\n  \"park_published\": \"<boolean>\",\n  \"logo_url\": \"<string>\",\n  \"email1\": \"<string>\",\n  \"email2\": \"<string>\",\n  \"telephone1\": \"<string>\",\n  \"telephone2\": \"<string>\",\n  \"instagram_url\": \"<string>\",\n  \"facebook_url\": \"<string>\",\n  \"youtube_url\": \"<string>\",\n  \"vimeo_url\": \"<string>\",\n  \"twitter_url\": \"<string>\",\n  \"website_url\": \"<string>\",\n  \"summary\": \"<string>\",\n  \"description\": \"<string>\",\n  \"location\": {\n   \"id\": \"<long>\",\n   \"lat\": \"<long>\",\n   \"lng\": \"<long>\",\n   \"address1\": \"<string>\",\n   \"address2\": \"<string>\",\n   \"address3\": \"<string>\",\n   \"area_code\": \"<string>\",\n   \"city_town\": \"<string>\",\n   \"region\": \"<string>\",\n   \"time_zone\": \"<string>\",\n   \"country\": {\n    \"id\": \"<long>\",\n    \"country_name\": \"<string>\",\n    \"country_code\": \"<string>\",\n    \"country_flag\": \"<string>\",\n    \"country_flag_emoji\": \"<string>\",\n    \"currency\": {\n     \"id\": \"<long>\",\n     \"currency_name\": \"<string>\",\n     \"currency_code\": \"<string>\",\n     \"currency_symbol\": \"<string>\",\n     \"currency_short\": \"<string>\"\n    }\n   }\n  },\n  \"languages\": [\n   {\n    \"id\": \"<long>\",\n    \"language_name\": \"<string>\",\n    \"language_code\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"language_name\": \"<string>\",\n    \"language_code\": \"<string>\"\n   }\n  ],\n  \"cable_type\": {\n   \"id\": \"<long>\",\n   \"type\": \"<string>\",\n   \"direction\": \"<string>\"\n  },\n  \"images\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"videos\": [\n   \"<string>\",\n   \"<string>\"\n  ]\n },\n {\n  \"name\": \"<string>\",\n  \"id\": \"<long>\",\n  \"park_audience\": \"<string>\",\n  \"park_open\": \"<boolean>\",\n  \"park_published\": \"<boolean>\",\n  \"logo_url\": \"<string>\",\n  \"email1\": \"<string>\",\n  \"email2\": \"<string>\",\n  \"telephone1\": \"<string>\",\n  \"telephone2\": \"<string>\",\n  \"instagram_url\": \"<string>\",\n  \"facebook_url\": \"<string>\",\n  \"youtube_url\": \"<string>\",\n  \"vimeo_url\": \"<string>\",\n  \"twitter_url\": \"<string>\",\n  \"website_url\": \"<string>\",\n  \"summary\": \"<string>\",\n  \"description\": \"<string>\",\n  \"location\": {\n   \"id\": \"<long>\",\n   \"lat\": \"<long>\",\n   \"lng\": \"<long>\",\n   \"address1\": \"<string>\",\n   \"address2\": \"<string>\",\n   \"address3\": \"<string>\",\n   \"area_code\": \"<string>\",\n   \"city_town\": \"<string>\",\n   \"region\": \"<string>\",\n   \"time_zone\": \"<string>\",\n   \"country\": {\n    \"id\": \"<long>\",\n    \"country_name\": \"<string>\",\n    \"country_code\": \"<string>\",\n    \"country_flag\": \"<string>\",\n    \"country_flag_emoji\": \"<string>\",\n    \"currency\": {\n     \"id\": \"<long>\",\n     \"currency_name\": \"<string>\",\n     \"currency_code\": \"<string>\",\n     \"currency_symbol\": \"<string>\",\n     \"currency_short\": \"<string>\"\n    }\n   }\n  },\n  \"languages\": [\n   {\n    \"id\": \"<long>\",\n    \"language_name\": \"<string>\",\n    \"language_code\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"language_name\": \"<string>\",\n    \"language_code\": \"<string>\"\n   }\n  ],\n  \"cable_type\": {\n   \"id\": \"<long>\",\n   \"type\": \"<string>\",\n   \"direction\": \"<string>\"\n  },\n  \"images\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"videos\": [\n   \"<string>\",\n   \"<string>\"\n  ]\n }\n]"
						}
					]
				},
				{
					"name": "Add a new wakepark",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b65a3bf8-a92c-43ac-bd4b-c0c8b4718e74",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"response contains a wakepark\", function () {",
									"    var json = pm.response.json();",
									"    pm.expect(json.item).to.be.an('object')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<string>\",\n    \"id\": \"<long>\",\n    \"park_audience\": \"<string>\",\n    \"park_open\": \"<boolean>\",\n    \"park_published\": \"<boolean>\",\n    \"logo_url\": \"<string>\",\n    \"email1\": \"<string>\",\n    \"email2\": \"<string>\",\n    \"telephone1\": \"<string>\",\n    \"telephone2\": \"<string>\",\n    \"instagram_url\": \"<string>\",\n    \"facebook_url\": \"<string>\",\n    \"youtube_url\": \"<string>\",\n    \"vimeo_url\": \"<string>\",\n    \"twitter_url\": \"<string>\",\n    \"website_url\": \"<string>\",\n    \"summary\": \"<string>\",\n    \"description\": \"<string>\",\n    \"location\": {\n        \"id\": \"<long>\",\n        \"lat\": \"<long>\",\n        \"lng\": \"<long>\",\n        \"address1\": \"<string>\",\n        \"address2\": \"<string>\",\n        \"address3\": \"<string>\",\n        \"area_code\": \"<string>\",\n        \"city_town\": \"<string>\",\n        \"region\": \"<string>\",\n        \"time_zone\": \"<string>\",\n        \"country\": {\n            \"id\": \"<long>\",\n            \"country_name\": \"<string>\",\n            \"country_code\": \"<string>\",\n            \"country_flag\": \"<string>\",\n            \"country_flag_emoji\": \"<string>\",\n            \"currency\": {\n                \"id\": \"<long>\",\n                \"currency_name\": \"<string>\",\n                \"currency_code\": \"<string>\",\n                \"currency_symbol\": \"<string>\",\n                \"currency_short\": \"<string>\"\n            }\n        }\n    },\n    \"languages\": [\n        {\n            \"id\": \"<long>\",\n            \"language_name\": \"<string>\",\n            \"language_code\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"language_name\": \"<string>\",\n            \"language_code\": \"<string>\"\n        }\n    ],\n    \"cable_type\": {\n        \"id\": \"<long>\",\n        \"type\": \"<string>\",\n        \"direction\": \"<string>\"\n    },\n    \"images\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"videos\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/wakeparks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"wakeparks"
							]
						}
					},
					"response": [
						{
							"name": "bad request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"id\": \"<long>\",\n    \"park_audience\": \"<string>\",\n    \"park_open\": \"<boolean>\",\n    \"park_published\": \"<boolean>\",\n    \"logo_url\": \"<string>\",\n    \"email1\": \"<string>\",\n    \"email2\": \"<string>\",\n    \"telephone1\": \"<string>\",\n    \"telephone2\": \"<string>\",\n    \"instagram_url\": \"<string>\",\n    \"facebook_url\": \"<string>\",\n    \"youtube_url\": \"<string>\",\n    \"vimeo_url\": \"<string>\",\n    \"twitter_url\": \"<string>\",\n    \"website_url\": \"<string>\",\n    \"summary\": \"<string>\",\n    \"description\": \"<string>\",\n    \"location\": {\n        \"id\": \"<long>\",\n        \"lat\": \"<long>\",\n        \"lng\": \"<long>\",\n        \"address1\": \"<string>\",\n        \"address2\": \"<string>\",\n        \"address3\": \"<string>\",\n        \"area_code\": \"<string>\",\n        \"city_town\": \"<string>\",\n        \"region\": \"<string>\",\n        \"time_zone\": \"<string>\",\n        \"country\": {\n            \"id\": \"<long>\",\n            \"country_name\": \"<string>\",\n            \"country_code\": \"<string>\",\n            \"country_flag\": \"<string>\",\n            \"country_flag_emoji\": \"<string>\",\n            \"currency\": {\n                \"id\": \"<long>\",\n                \"currency_name\": \"<string>\",\n                \"currency_code\": \"<string>\",\n                \"currency_symbol\": \"<string>\",\n                \"currency_short\": \"<string>\"\n            }\n        }\n    },\n    \"languages\": [\n        {\n            \"id\": \"<long>\",\n            \"language_name\": \"<string>\",\n            \"language_code\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"language_name\": \"<string>\",\n            \"language_code\": \"<string>\"\n        }\n    ],\n    \"cable_type\": {\n        \"id\": \"<long>\",\n        \"type\": \"<string>\",\n        \"direction\": \"<string>\"\n    },\n    \"images\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"videos\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/wakeparks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"wakeparks"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "cables",
			"item": [
				{
					"name": "{cable id}",
					"item": [
						{
							"name": "Get cable",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "39f2af12-25fe-41c5-bc81-0b60e0b5ae6e",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"value contains drinks array\", function () {",
											"    var json = pm.response.json();",
											"    pm.expect(json.id).to.be.an('integer')",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cables/:cable_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cables",
										":cable_id"
									],
									"variable": [
										{
											"key": "cable_id",
											"value": "<long>",
											"description": "cable_id to retrieve"
										}
									]
								},
								"description": "Returns a list of all cables."
							},
							"response": [
								{
									"name": "resource not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cables/<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cables",
												"<long>"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cables/<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cables",
												"<long>"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"id\": \"<long>\",\n  \"type\": \"<string>\",\n  \"direction\": \"<string>\"\n },\n {\n  \"id\": \"<long>\",\n  \"type\": \"<string>\",\n  \"direction\": \"<string>\"\n }\n]"
								}
							]
						},
						{
							"name": "Delete cable",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d0f293e5-3e16-411c-90fb-2821cab4747c",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"response contains the deleted cable id\", function () {",
											"    var json = pm.response.json();",
											"    pm.expect(json.id).to.be.an('integer')",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cables/:cable_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cables",
										":cable_id"
									],
									"variable": [
										{
											"key": "cable_id",
											"value": "<long>",
											"description": "cable_id to delete"
										}
									]
								}
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cables/<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cables",
												"<long>"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "resource not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cables/<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cables",
												"<long>"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "unauthorised",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/cables/<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cables",
												"<long>"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update a cable",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4c4791c9-3f93-4a8a-bf06-6a36c2a72dac",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"response contains the patched cable's id\", function () {",
											"    var json = pm.response.json();",
											"    pm.expect(json.id).to.be.an('integer')",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<long>\",\n    \"type\": \"<string>\",\n    \"direction\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/cables/:cable_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cables",
										":cable_id"
									],
									"variable": [
										{
											"key": "cable_id",
											"value": "<long>",
											"description": "cable_id to retrieve"
										}
									]
								},
								"description": "Update a specific cables data"
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<long>\",\n    \"type\": \"<string>\",\n    \"direction\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/cables/<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cables",
												"<long>"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "resource not found",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<long>\",\n    \"type\": \"<string>\",\n    \"direction\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/cables/<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cables",
												"<long>"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<long>\",\n    \"type\": \"<string>\",\n    \"direction\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/cables/<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cables",
												"<long>"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "unauthorised",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<long>\",\n    \"type\": \"<string>\",\n    \"direction\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/cables/<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cables",
												"<long>"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Get cables",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3c8fd4cd-6233-4d71-8c7b-68d7f7d85a84",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"response has an 'items' array containing cables\", function () {",
									"    var json = pm.response.json();",
									"    pm.expect(json.items).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cables",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cables"
							]
						},
						"description": "Returns a list of all cables."
					},
					"response": [
						{
							"name": "success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cables",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cables"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"<long>\",\n  \"type\": \"<string>\",\n  \"direction\": \"<string>\"\n },\n {\n  \"id\": \"<long>\",\n  \"type\": \"<string>\",\n  \"direction\": \"<string>\"\n }\n]"
						}
					]
				},
				{
					"name": "Add a new cable",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e9037092-b8e2-45f6-827f-c0542e763e4b",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"response contains an 'item' object\", function () {",
									"    var json = pm.response.json();",
									"    pm.expect(json.item).to.be.an('object')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"<long>\",\n    \"type\": \"<string>\",\n    \"direction\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/cables",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cables"
							]
						}
					},
					"response": [
						{
							"name": "bad request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<long>\",\n    \"type\": \"<string>\",\n    \"direction\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/cables",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cables"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "unauthorised",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<long>\",\n    \"type\": \"<string>\",\n    \"direction\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/cables",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cables"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "locations",
			"item": [
				{
					"name": "{location id}",
					"item": [
						{
							"name": "Get location",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4f57a5f4-d3ec-4441-9e88-fda6224f9f4b",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"response contains a location with an id, lat and lng\", function () {",
											"    var json = pm.response.json();",
											"    pm.expect(json.id).to.be.an('integer')",
											"    pm.expect(json.lat).to.be.an('integer')",
											"    pm.expect(json.lng).to.be.an('integer')",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/locations/:location_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"locations",
										":location_id"
									],
									"variable": [
										{
											"key": "location_id",
											"value": "<long>",
											"description": "location_id to retrieve"
										}
									]
								},
								"description": "Returns a single location."
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/locations/<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"locations",
												"<long>"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"id\": \"<long>\",\n  \"lat\": \"<long>\",\n  \"lng\": \"<long>\",\n  \"address1\": \"<string>\",\n  \"address2\": \"<string>\",\n  \"address3\": \"<string>\",\n  \"area_code\": \"<string>\",\n  \"city_town\": \"<string>\",\n  \"region\": \"<string>\",\n  \"time_zone\": \"<string>\",\n  \"country\": {\n   \"id\": \"<long>\",\n   \"country_name\": \"<string>\",\n   \"country_code\": \"<string>\",\n   \"country_flag\": \"<string>\",\n   \"country_flag_emoji\": \"<string>\",\n   \"currency\": {\n    \"id\": \"<long>\",\n    \"currency_name\": \"<string>\",\n    \"currency_code\": \"<string>\",\n    \"currency_symbol\": \"<string>\",\n    \"currency_short\": \"<string>\"\n   }\n  }\n },\n {\n  \"id\": \"<long>\",\n  \"lat\": \"<long>\",\n  \"lng\": \"<long>\",\n  \"address1\": \"<string>\",\n  \"address2\": \"<string>\",\n  \"address3\": \"<string>\",\n  \"area_code\": \"<string>\",\n  \"city_town\": \"<string>\",\n  \"region\": \"<string>\",\n  \"time_zone\": \"<string>\",\n  \"country\": {\n   \"id\": \"<long>\",\n   \"country_name\": \"<string>\",\n   \"country_code\": \"<string>\",\n   \"country_flag\": \"<string>\",\n   \"country_flag_emoji\": \"<string>\",\n   \"currency\": {\n    \"id\": \"<long>\",\n    \"currency_name\": \"<string>\",\n    \"currency_code\": \"<string>\",\n    \"currency_symbol\": \"<string>\",\n    \"currency_short\": \"<string>\"\n   }\n  }\n }\n]"
								},
								{
									"name": "resource not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/locations/<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"locations",
												"<long>"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete location",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "717f5452-bf96-47da-9089-83ec58200d9f",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"response contains the deleted location id\", function () {",
											"    var json = pm.response.json();",
											"    pm.expect(json.id).to.be.an('integer')",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/locations/:location_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"locations",
										":location_id"
									],
									"variable": [
										{
											"key": "location_id",
											"value": "<long>",
											"description": "location_id to delete"
										}
									]
								},
								"description": "Delete a single location"
							},
							"response": [
								{
									"name": "unauthorised",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/locations/<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"locations",
												"<long>"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "resource not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/locations/<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"locations",
												"<long>"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "success",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/locations/<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"locations",
												"<long>"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update a location",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b56b15dd-4545-4e8a-9cb7-e8851be88541",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"response contains the patched location's id\", function () {",
											"    var json = pm.response.json();",
											"    pm.expect(json.id).to.be.an('integer')",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<long>\",\n    \"type\": \"<string>\",\n    \"direction\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/locations/:location_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"locations",
										":location_id"
									],
									"variable": [
										{
											"key": "location_id",
											"value": "<long>",
											"description": "location_id to retrieve"
										}
									]
								},
								"description": "Update a single location's data"
							},
							"response": [
								{
									"name": "bad request",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<long>\",\n    \"type\": \"<string>\",\n    \"direction\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/locations/<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"locations",
												"<long>"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "resource not found",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<long>\",\n    \"type\": \"<string>\",\n    \"direction\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/locations/<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"locations",
												"<long>"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "unauthorised",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<long>\",\n    \"type\": \"<string>\",\n    \"direction\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/locations/<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"locations",
												"<long>"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "success",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<long>\",\n    \"type\": \"<string>\",\n    \"direction\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/locations/<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"locations",
												"<long>"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Get locations",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b658d57a-4293-4e3b-8b24-a0a6a6e19d24",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"response has an 'items' array containing locations\", function () {",
									"    var json = pm.response.json();",
									"    pm.expect(json.items).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/locations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"locations"
							]
						},
						"description": "Returns a list of all locations."
					},
					"response": [
						{
							"name": "success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/locations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"locations"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"<long>\",\n  \"lat\": \"<long>\",\n  \"lng\": \"<long>\",\n  \"address1\": \"<string>\",\n  \"address2\": \"<string>\",\n  \"address3\": \"<string>\",\n  \"area_code\": \"<string>\",\n  \"city_town\": \"<string>\",\n  \"region\": \"<string>\",\n  \"time_zone\": \"<string>\",\n  \"country\": {\n   \"id\": \"<long>\",\n   \"country_name\": \"<string>\",\n   \"country_code\": \"<string>\",\n   \"country_flag\": \"<string>\",\n   \"country_flag_emoji\": \"<string>\",\n   \"currency\": {\n    \"id\": \"<long>\",\n    \"currency_name\": \"<string>\",\n    \"currency_code\": \"<string>\",\n    \"currency_symbol\": \"<string>\",\n    \"currency_short\": \"<string>\"\n   }\n  }\n },\n {\n  \"id\": \"<long>\",\n  \"lat\": \"<long>\",\n  \"lng\": \"<long>\",\n  \"address1\": \"<string>\",\n  \"address2\": \"<string>\",\n  \"address3\": \"<string>\",\n  \"area_code\": \"<string>\",\n  \"city_town\": \"<string>\",\n  \"region\": \"<string>\",\n  \"time_zone\": \"<string>\",\n  \"country\": {\n   \"id\": \"<long>\",\n   \"country_name\": \"<string>\",\n   \"country_code\": \"<string>\",\n   \"country_flag\": \"<string>\",\n   \"country_flag_emoji\": \"<string>\",\n   \"currency\": {\n    \"id\": \"<long>\",\n    \"currency_name\": \"<string>\",\n    \"currency_code\": \"<string>\",\n    \"currency_symbol\": \"<string>\",\n    \"currency_short\": \"<string>\"\n   }\n  }\n }\n]"
						}
					]
				},
				{
					"name": "Add a new location",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2f4100e1-409f-415c-9577-7e88cc0a74c0",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"response contains a wakepark\", function () {",
									"    var json = pm.response.json();",
									"    pm.expect(json.item).to.be.an('object')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"<long>\",\n    \"lat\": \"<long>\",\n    \"lng\": \"<long>\",\n    \"address1\": \"<string>\",\n    \"address2\": \"<string>\",\n    \"address3\": \"<string>\",\n    \"area_code\": \"<string>\",\n    \"city_town\": \"<string>\",\n    \"region\": \"<string>\",\n    \"time_zone\": \"<string>\",\n    \"country\": {\n        \"id\": \"<long>\",\n        \"country_name\": \"<string>\",\n        \"country_code\": \"<string>\",\n        \"country_flag\": \"<string>\",\n        \"country_flag_emoji\": \"<string>\",\n        \"currency\": {\n            \"id\": \"<long>\",\n            \"currency_name\": \"<string>\",\n            \"currency_code\": \"<string>\",\n            \"currency_symbol\": \"<string>\",\n            \"currency_short\": \"<string>\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/locations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"locations"
							]
						}
					},
					"response": [
						{
							"name": "created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<long>\",\n    \"lat\": \"<long>\",\n    \"lng\": \"<long>\",\n    \"address1\": \"<string>\",\n    \"address2\": \"<string>\",\n    \"address3\": \"<string>\",\n    \"area_code\": \"<string>\",\n    \"city_town\": \"<string>\",\n    \"region\": \"<string>\",\n    \"time_zone\": \"<string>\",\n    \"country\": {\n        \"id\": \"<long>\",\n        \"country_name\": \"<string>\",\n        \"country_code\": \"<string>\",\n        \"country_flag\": \"<string>\",\n        \"country_flag_emoji\": \"<string>\",\n        \"currency\": {\n            \"id\": \"<long>\",\n            \"currency_name\": \"<string>\",\n            \"currency_code\": \"<string>\",\n            \"currency_symbol\": \"<string>\",\n            \"currency_short\": \"<string>\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/locations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"locations"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "unauthorised",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<long>\",\n    \"lat\": \"<long>\",\n    \"lng\": \"<long>\",\n    \"address1\": \"<string>\",\n    \"address2\": \"<string>\",\n    \"address3\": \"<string>\",\n    \"area_code\": \"<string>\",\n    \"city_town\": \"<string>\",\n    \"region\": \"<string>\",\n    \"time_zone\": \"<string>\",\n    \"country\": {\n        \"id\": \"<long>\",\n        \"country_name\": \"<string>\",\n        \"country_code\": \"<string>\",\n        \"country_flag\": \"<string>\",\n        \"country_flag_emoji\": \"<string>\",\n        \"currency\": {\n            \"id\": \"<long>\",\n            \"currency_name\": \"<string>\",\n            \"currency_code\": \"<string>\",\n            \"currency_symbol\": \"<string>\",\n            \"currency_short\": \"<string>\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/locations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"locations"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "bad request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<long>\",\n    \"lat\": \"<long>\",\n    \"lng\": \"<long>\",\n    \"address1\": \"<string>\",\n    \"address2\": \"<string>\",\n    \"address3\": \"<string>\",\n    \"area_code\": \"<string>\",\n    \"city_town\": \"<string>\",\n    \"region\": \"<string>\",\n    \"time_zone\": \"<string>\",\n    \"country\": {\n        \"id\": \"<long>\",\n        \"country_name\": \"<string>\",\n        \"country_code\": \"<string>\",\n        \"country_flag\": \"<string>\",\n        \"country_flag_emoji\": \"<string>\",\n        \"currency\": {\n            \"id\": \"<long>\",\n            \"currency_name\": \"<string>\",\n            \"currency_code\": \"<string>\",\n            \"currency_symbol\": \"<string>\",\n            \"currency_short\": \"<string>\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/locations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"locations"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "countries",
			"item": [
				{
					"name": "{country id}",
					"item": [
						{
							"name": "Get country",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c758076d-eb21-44f5-9988-cf8612041430",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"response contains a country with an country_id, country_name and country_code\", function () {",
											"    var json = pm.response.json();",
											"    pm.expect(json.country_id).to.be.an('integer')",
											"    pm.expect(json.country_name).to.be.a('string')",
											"    pm.expect(json.country_code).to.be.a('string')",
											"    pm.expect(json.country_code.length()).to.be(2)",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/countries/:country_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"countries",
										":country_id"
									],
									"variable": [
										{
											"key": "country_id",
											"value": "<long>",
											"description": "country_id to retrieve"
										}
									]
								},
								"description": "Returns a single country."
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/countries/<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"countries",
												"<long>"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"id\": \"<long>\",\n  \"country_name\": \"<string>\",\n  \"country_code\": \"<string>\",\n  \"country_flag\": \"<string>\",\n  \"country_flag_emoji\": \"<string>\",\n  \"currency\": {\n   \"id\": \"<long>\",\n   \"currency_name\": \"<string>\",\n   \"currency_code\": \"<string>\",\n   \"currency_symbol\": \"<string>\",\n   \"currency_short\": \"<string>\"\n  }\n },\n {\n  \"id\": \"<long>\",\n  \"country_name\": \"<string>\",\n  \"country_code\": \"<string>\",\n  \"country_flag\": \"<string>\",\n  \"country_flag_emoji\": \"<string>\",\n  \"currency\": {\n   \"id\": \"<long>\",\n   \"currency_name\": \"<string>\",\n   \"currency_code\": \"<string>\",\n   \"currency_symbol\": \"<string>\",\n   \"currency_short\": \"<string>\"\n  }\n }\n]"
								},
								{
									"name": "resource not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/countries/<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"countries",
												"<long>"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete country",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0be15f1e-f9df-4281-8074-638593d8bfb0",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"response contains the deleted country_id\", function () {",
											"    var json = pm.response.json();",
											"    pm.expect(json.country_id).to.be.an('integer')",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/countries/:country_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"countries",
										":country_id"
									],
									"variable": [
										{
											"key": "country_id",
											"value": "<long>",
											"description": "country_id to delete"
										}
									]
								},
								"description": "Delete a single country"
							},
							"response": [
								{
									"name": "unauthorised",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/countries/<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"countries",
												"<long>"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "resource not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/countries/<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"countries",
												"<long>"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "success",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/countries/<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"countries",
												"<long>"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update a country",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d238dd0d-46a1-42cf-ac3d-c6f1d97ace7c",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"response contains the patched country_id\", function () {",
											"    var json = pm.response.json();",
											"    pm.expect(json.country_id).to.be.an('integer')",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<long>\",\n    \"country_name\": \"<string>\",\n    \"country_code\": \"<string>\",\n    \"country_flag\": \"<string>\",\n    \"country_flag_emoji\": \"<string>\",\n    \"currency\": {\n        \"id\": \"<long>\",\n        \"currency_name\": \"<string>\",\n        \"currency_code\": \"<string>\",\n        \"currency_symbol\": \"<string>\",\n        \"currency_short\": \"<string>\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/countries/:country_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"countries",
										":country_id"
									],
									"variable": [
										{
											"key": "country_id",
											"value": "<long>",
											"description": "country_id to retrieve"
										}
									]
								},
								"description": "Update a single country's data"
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<long>\",\n    \"country_name\": \"<string>\",\n    \"country_code\": \"<string>\",\n    \"country_flag\": \"<string>\",\n    \"country_flag_emoji\": \"<string>\",\n    \"currency\": {\n        \"id\": \"<long>\",\n        \"currency_name\": \"<string>\",\n        \"currency_code\": \"<string>\",\n        \"currency_symbol\": \"<string>\",\n        \"currency_short\": \"<string>\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/countries/<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"countries",
												"<long>"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "unauthorised",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<long>\",\n    \"country_name\": \"<string>\",\n    \"country_code\": \"<string>\",\n    \"country_flag\": \"<string>\",\n    \"country_flag_emoji\": \"<string>\",\n    \"currency\": {\n        \"id\": \"<long>\",\n        \"currency_name\": \"<string>\",\n        \"currency_code\": \"<string>\",\n        \"currency_symbol\": \"<string>\",\n        \"currency_short\": \"<string>\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/countries/<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"countries",
												"<long>"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "resource not found",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<long>\",\n    \"country_name\": \"<string>\",\n    \"country_code\": \"<string>\",\n    \"country_flag\": \"<string>\",\n    \"country_flag_emoji\": \"<string>\",\n    \"currency\": {\n        \"id\": \"<long>\",\n        \"currency_name\": \"<string>\",\n        \"currency_code\": \"<string>\",\n        \"currency_symbol\": \"<string>\",\n        \"currency_short\": \"<string>\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/countries/<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"countries",
												"<long>"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<long>\",\n    \"country_name\": \"<string>\",\n    \"country_code\": \"<string>\",\n    \"country_flag\": \"<string>\",\n    \"country_flag_emoji\": \"<string>\",\n    \"currency\": {\n        \"id\": \"<long>\",\n        \"currency_name\": \"<string>\",\n        \"currency_code\": \"<string>\",\n        \"currency_symbol\": \"<string>\",\n        \"currency_short\": \"<string>\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/countries/<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"countries",
												"<long>"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Get countries",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "290b3d70-a97f-4d61-89a4-3a88c3f605af",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"response has an 'items' array containing countries\", function () {",
									"    var json = pm.response.json();",
									"    pm.expect(json.items).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/countries",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"countries"
							]
						},
						"description": "Returns a list of all countries."
					},
					"response": [
						{
							"name": "success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/countries",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"countries"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"<long>\",\n  \"country_name\": \"<string>\",\n  \"country_code\": \"<string>\",\n  \"country_flag\": \"<string>\",\n  \"country_flag_emoji\": \"<string>\",\n  \"currency\": {\n   \"id\": \"<long>\",\n   \"currency_name\": \"<string>\",\n   \"currency_code\": \"<string>\",\n   \"currency_symbol\": \"<string>\",\n   \"currency_short\": \"<string>\"\n  }\n },\n {\n  \"id\": \"<long>\",\n  \"country_name\": \"<string>\",\n  \"country_code\": \"<string>\",\n  \"country_flag\": \"<string>\",\n  \"country_flag_emoji\": \"<string>\",\n  \"currency\": {\n   \"id\": \"<long>\",\n   \"currency_name\": \"<string>\",\n   \"currency_code\": \"<string>\",\n   \"currency_symbol\": \"<string>\",\n   \"currency_short\": \"<string>\"\n  }\n }\n]"
						}
					]
				},
				{
					"name": "Add a new country",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e80e081d-4994-4531-bd68-97233072aaec",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"response contains a country\", function () {",
									"    var json = pm.response.json();",
									"    pm.expect(json.item).to.be.an('object')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"<long>\",\n    \"country_name\": \"<string>\",\n    \"country_code\": \"<string>\",\n    \"country_flag\": \"<string>\",\n    \"country_flag_emoji\": \"<string>\",\n    \"currency\": {\n        \"id\": \"<long>\",\n        \"currency_name\": \"<string>\",\n        \"currency_code\": \"<string>\",\n        \"currency_symbol\": \"<string>\",\n        \"currency_short\": \"<string>\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/countries",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"countries"
							]
						}
					},
					"response": [
						{
							"name": "bad request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<long>\",\n    \"country_name\": \"<string>\",\n    \"country_code\": \"<string>\",\n    \"country_flag\": \"<string>\",\n    \"country_flag_emoji\": \"<string>\",\n    \"currency\": {\n        \"id\": \"<long>\",\n        \"currency_name\": \"<string>\",\n        \"currency_code\": \"<string>\",\n        \"currency_symbol\": \"<string>\",\n        \"currency_short\": \"<string>\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/countries",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"countries"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<long>\",\n    \"country_name\": \"<string>\",\n    \"country_code\": \"<string>\",\n    \"country_flag\": \"<string>\",\n    \"country_flag_emoji\": \"<string>\",\n    \"currency\": {\n        \"id\": \"<long>\",\n        \"currency_name\": \"<string>\",\n        \"currency_code\": \"<string>\",\n        \"currency_symbol\": \"<string>\",\n        \"currency_short\": \"<string>\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/countries",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"countries"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "unauthorised",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<long>\",\n    \"country_name\": \"<string>\",\n    \"country_code\": \"<string>\",\n    \"country_flag\": \"<string>\",\n    \"country_flag_emoji\": \"<string>\",\n    \"currency\": {\n        \"id\": \"<long>\",\n        \"currency_name\": \"<string>\",\n        \"currency_code\": \"<string>\",\n        \"currency_symbol\": \"<string>\",\n        \"currency_short\": \"<string>\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/countries",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"countries"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "currencies",
			"item": [
				{
					"name": "{currency id}",
					"item": [
						{
							"name": "Get currency",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "80d39d7a-da7c-426c-8c69-e348b3765f95",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"response contains a currency with an currency_id, currency_name and a currency_code\", function () {",
											"    var json = pm.response.json();",
											"    pm.expect(json.currency_id).to.be.an('integer')",
											"    pm.expect(json.currency_name).to.be.a('string')",
											"    pm.expect(json.currency_code).to.be.a('string')",
											"    pm.expect(json.currency_code.length()).to.be(3)",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/currencies/:currency_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"currencies",
										":currency_id"
									],
									"variable": [
										{
											"key": "currency_id",
											"value": "<long>",
											"description": "currency_id to retrieve"
										}
									]
								},
								"description": "Returns a single currency."
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/currencies/<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"currencies",
												"<long>"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"id\": \"<long>\",\n  \"country_name\": \"<string>\",\n  \"country_code\": \"<string>\",\n  \"country_flag\": \"<string>\",\n  \"country_flag_emoji\": \"<string>\",\n  \"currency\": {\n   \"id\": \"<long>\",\n   \"currency_name\": \"<string>\",\n   \"currency_code\": \"<string>\",\n   \"currency_symbol\": \"<string>\",\n   \"currency_short\": \"<string>\"\n  }\n },\n {\n  \"id\": \"<long>\",\n  \"country_name\": \"<string>\",\n  \"country_code\": \"<string>\",\n  \"country_flag\": \"<string>\",\n  \"country_flag_emoji\": \"<string>\",\n  \"currency\": {\n   \"id\": \"<long>\",\n   \"currency_name\": \"<string>\",\n   \"currency_code\": \"<string>\",\n   \"currency_symbol\": \"<string>\",\n   \"currency_short\": \"<string>\"\n  }\n }\n]"
								},
								{
									"name": "resource not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/currencies/<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"currencies",
												"<long>"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete currency",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7eb9fde0-0255-47dc-83ec-7cfad2cdd8e0",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"response contains the deleted currency_id\", function () {",
											"    var json = pm.response.json();",
											"    pm.expect(json.currency_id).to.be.an('integer')",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/currencies/:currency_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"currencies",
										":currency_id"
									],
									"variable": [
										{
											"key": "currency_id",
											"value": "<long>",
											"description": "currency_id to delete"
										}
									]
								},
								"description": "Delete a single currency"
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/currencies/<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"currencies",
												"<long>"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "resource not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/currencies/<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"currencies",
												"<long>"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "unauthorised",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/currencies/<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"currencies",
												"<long>"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update a currency",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2a4f4b66-dcd5-405e-a6ee-c8556cb9a526",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"response contains the patched country_id\", function () {",
											"    var json = pm.response.json();",
											"    pm.expect(json.country_id).to.be.an('integer')",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<long>\",\n    \"currency_name\": \"<string>\",\n    \"currency_code\": \"<string>\",\n    \"currency_symbol\": \"<string>\",\n    \"currency_short\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/currencies/:currency_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"currencies",
										":currency_id"
									],
									"variable": [
										{
											"key": "currency_id",
											"value": "<long>",
											"description": "currency_id to retrieve"
										}
									]
								},
								"description": "Update a single currency's data"
							},
							"response": [
								{
									"name": "unauthorised",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<long>\",\n    \"currency_name\": \"<string>\",\n    \"currency_code\": \"<string>\",\n    \"currency_symbol\": \"<string>\",\n    \"currency_short\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/currencies/<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"currencies",
												"<long>"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "success",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<long>\",\n    \"currency_name\": \"<string>\",\n    \"currency_code\": \"<string>\",\n    \"currency_symbol\": \"<string>\",\n    \"currency_short\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/currencies/<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"currencies",
												"<long>"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<long>\",\n    \"currency_name\": \"<string>\",\n    \"currency_code\": \"<string>\",\n    \"currency_symbol\": \"<string>\",\n    \"currency_short\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/currencies/<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"currencies",
												"<long>"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "resource not found",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<long>\",\n    \"currency_name\": \"<string>\",\n    \"currency_code\": \"<string>\",\n    \"currency_symbol\": \"<string>\",\n    \"currency_short\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/currencies/<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"currencies",
												"<long>"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Get currencies",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e15a1e93-ca3d-44f5-9838-f4097eb5326e",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"response has an 'items' array containing currencies\", function () {",
									"    var json = pm.response.json();",
									"    pm.expect(json.items).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/currencies",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"currencies"
							]
						},
						"description": "Returns a list of all currencies."
					},
					"response": [
						{
							"name": "success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/currencies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"currencies"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"<long>\",\n  \"currency_name\": \"<string>\",\n  \"currency_code\": \"<string>\",\n  \"currency_symbol\": \"<string>\",\n  \"currency_short\": \"<string>\"\n },\n {\n  \"id\": \"<long>\",\n  \"currency_name\": \"<string>\",\n  \"currency_code\": \"<string>\",\n  \"currency_symbol\": \"<string>\",\n  \"currency_short\": \"<string>\"\n }\n]"
						}
					]
				},
				{
					"name": "Add a new currency",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a584a47d-42a9-4cdf-bfa8-9c84bfc45a6e",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"response contains a currency\", function () {",
									"    var json = pm.response.json();",
									"    pm.expect(json.item).to.be.an('object')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"<long>\",\n    \"currency_name\": \"<string>\",\n    \"currency_code\": \"<string>\",\n    \"currency_symbol\": \"<string>\",\n    \"currency_short\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/currencies",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"currencies"
							]
						}
					},
					"response": [
						{
							"name": "bad request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<long>\",\n    \"currency_name\": \"<string>\",\n    \"currency_code\": \"<string>\",\n    \"currency_symbol\": \"<string>\",\n    \"currency_short\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/currencies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"currencies"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<long>\",\n    \"currency_name\": \"<string>\",\n    \"currency_code\": \"<string>\",\n    \"currency_symbol\": \"<string>\",\n    \"currency_short\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/currencies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"currencies"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "unauthorised",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<long>\",\n    \"currency_name\": \"<string>\",\n    \"currency_code\": \"<string>\",\n    \"currency_symbol\": \"<string>\",\n    \"currency_short\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/currencies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"currencies"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "languages",
			"item": [
				{
					"name": "{language id}",
					"item": [
						{
							"name": "Get language",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "57282154-71c1-42c4-80c6-6a244ad88826",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"response contains a currency with an language_id, language_name and language_code\", function () {",
											"    var json = pm.response.json();",
											"    pm.expect(json.language_id).to.be.an('integer')",
											"    pm.expect(json.language_name).to.be.a('string')",
											"    pm.expect(json.language_code).to.be.a('string')",
											"    pm.expect(json.currency_code.length()).to.be(2)",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/languages/:language_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages",
										":language_id"
									],
									"variable": [
										{
											"key": "language_id",
											"value": "<long>",
											"description": "language_id to retrieve"
										}
									]
								},
								"description": "Returns a single language."
							},
							"response": [
								{
									"name": "resource not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/languages/<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"languages",
												"<long>"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/languages/<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"languages",
												"<long>"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"id\": \"<long>\",\n  \"language_name\": \"<string>\",\n  \"language_code\": \"<string>\"\n },\n {\n  \"id\": \"<long>\",\n  \"language_name\": \"<string>\",\n  \"language_code\": \"<string>\"\n }\n]"
								}
							]
						},
						{
							"name": "Delete language",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3e8e1ec7-a7bd-45ef-873b-bf51afc95e79",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"response contains the deleted language_id\", function () {",
											"    var json = pm.response.json();",
											"    pm.expect(json.language_id).to.be.an('integer')",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/languages/:language_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages",
										":language_id"
									],
									"variable": [
										{
											"key": "language_id",
											"value": "<long>",
											"description": "language_id to delete"
										}
									]
								},
								"description": "Delete a single language"
							},
							"response": [
								{
									"name": "resource not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/languages/<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"languages",
												"<long>"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "success",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/languages/<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"languages",
												"<long>"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "unauthorised",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/languages/<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"languages",
												"<long>"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update a language",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6ab9f680-82b5-4765-b995-97d8ce477a06",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"response contains the patched language_id\", function () {",
											"    var json = pm.response.json();",
											"    pm.expect(json.language_id).to.be.an('integer')",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<long>\",\n    \"language_name\": \"<string>\",\n    \"language_code\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/languages/:language_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages",
										":language_id"
									],
									"variable": [
										{
											"key": "language_id",
											"value": "<long>",
											"description": "language_id to retrieve"
										}
									]
								},
								"description": "Update a single language's data"
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<long>\",\n    \"language_name\": \"<string>\",\n    \"language_code\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/languages/<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"languages",
												"<long>"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "unauthorised",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<long>\",\n    \"language_name\": \"<string>\",\n    \"language_code\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/languages/<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"languages",
												"<long>"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<long>\",\n    \"language_name\": \"<string>\",\n    \"language_code\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/languages/<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"languages",
												"<long>"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "resource not found",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<long>\",\n    \"language_name\": \"<string>\",\n    \"language_code\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/languages/<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"languages",
												"<long>"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Get languages",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ed66dae3-4dda-4a4e-9f42-4d25c18cd456",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"response has an 'items' array containing languages\", function () {",
									"    var json = pm.response.json();",
									"    pm.expect(json.items).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/languages",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"languages"
							]
						},
						"description": "Returns a list of all languages."
					},
					"response": [
						{
							"name": "success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/languages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"<long>\",\n  \"language_name\": \"<string>\",\n  \"language_code\": \"<string>\"\n },\n {\n  \"id\": \"<long>\",\n  \"language_name\": \"<string>\",\n  \"language_code\": \"<string>\"\n }\n]"
						}
					]
				},
				{
					"name": "Add a new language",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4c4dd12a-edbb-4597-a3c4-0a2dc03e1f61",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"response contains a language\", function () {",
									"    var json = pm.response.json();",
									"    pm.expect(json.item).to.be.an('object')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"<long>\",\n    \"language_name\": \"<string>\",\n    \"language_code\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/languages",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"languages"
							]
						}
					},
					"response": [
						{
							"name": "created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<long>\",\n    \"language_name\": \"<string>\",\n    \"language_code\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/languages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "unauthorised",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<long>\",\n    \"language_name\": \"<string>\",\n    \"language_code\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/languages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "bad request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<long>\",\n    \"language_name\": \"<string>\",\n    \"language_code\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/languages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "users",
			"item": [
				{
					"name": "{user Id}",
					"item": [
						{
							"name": "Get user by userId",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":userId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "<string>",
											"description": "The userId for the user that needs to be fetched."
										}
									]
								}
							},
							"response": [
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/user/<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"<string>"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/user/<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"<string>"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"user_role\": \"<string>\"\n}"
								},
								{
									"name": "resource not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/user/<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"<string>"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete user",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":userId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "<string>",
											"description": "The name that needs to be deleted"
										}
									]
								},
								"description": "This can only be done by the logged in user or by superadmin."
							},
							"response": [
								{
									"name": "User not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/user/<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"<string>"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid username supplied",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/user/<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"<string>"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Updated user",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"user_role\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":userId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "<string>",
											"description": "The userId for the user to be updated"
										}
									]
								},
								"description": "This can only be done by the logged in user."
							},
							"response": [
								{
									"name": "Invalid user supplied",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"user_role\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/user/<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"<string>"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User not found",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"user_role\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/user/<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"<string>"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Retrieve users",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users?per_page=<string>&search=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "per_page",
									"value": "<string>",
									"description": "Number of items to be returned per page"
								},
								{
									"key": "search",
									"value": "<string>",
									"description": "Search term"
								}
							]
						},
						"description": "Returns a list of all users - only performed with read:users permission on role"
					},
					"response": [
						{
							"name": "resource not found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users?per_page=<string>&search=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<string>"
										},
										{
											"key": "search",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users?per_page=<string>&search=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<string>"
										},
										{
											"key": "search",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users?per_page=<string>&search=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "per_page",
											"value": "<string>"
										},
										{
											"key": "search",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create user",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"user_role\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						},
						"description": "This can be done by any user - each user requires a unique email address."
					},
					"response": [
						{
							"name": "bad request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"user_role\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "resource not found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"user_role\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"user_role\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"user_role\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Logs user into the system",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/login?username=<string>&password=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"login"
							],
							"query": [
								{
									"key": "username",
									"value": "<string>",
									"description": "The user name for login"
								},
								{
									"key": "password",
									"value": "<string>",
									"description": "The password for login in clear text"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/login?username=<string>&password=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"login"
									],
									"query": [
										{
											"key": "username",
											"value": "<string>"
										},
										{
											"key": "password",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Rate-Limit",
									"value": "<integer>",
									"description": "calls per hour allowed by the user"
								},
								{
									"key": "X-Expires-After",
									"value": "<dateTime>",
									"description": "date in UTC when token expires"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<string>\""
						},
						{
							"name": "Invalid username/password supplied",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/login?username=<string>&password=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"login"
									],
									"query": [
										{
											"key": "username",
											"value": "<string>"
										},
										{
											"key": "password",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Logs out current logged in user session",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"logout"
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/logout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"logout"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "769fb52b-ea81-4fcc-b9f0-699826326afd",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "4f45b1a8-7acf-4495-a433-4aced736c574",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "93d8e2fb-f68d-47a9-b64f-46b02449d5db",
			"key": "baseUrl",
			"value": "http://localhost:5000",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}